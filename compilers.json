# __compiler_base
# mingw64
#   mingw64-pe
#   clang-mingw64
#     clang-pe
# tdm
# dcj
# python
# go
# java
# scala
# ghc
# vc-toolchain-base
#   vc-toolchain(x86)
#   vc-toolchain(x64)
# vc-base
#   vc(x86)
#   vc(x64)
#     clang-vc
[
  {
    "name": "__compiler_base",
    "variables": {
      "DEV_SOFT_PATH": "$(ROOTDIR)\\app\\DevSoft",
      "USR_PATH": "$(HOMEDIR)\\usr",
      # Dir name convention
      # PROD[[_]VERSION][_ARCH][_SPECIFICATIONS]_DIR
      #
      # CLANG_X64_MINGW64_DIR:
      # CLANG, we don't care the version, they are x64 build, built by MINGW64
      #
      # MINGW64_DIR:
      # MINGW64 is a prod name, we don't care the version, no need for arch since it is in prod name
      #
      # PYTHON27_X86_DIR:
      # PYTHON, version 2.7 (we always concern the python version), x86 build
      #
      "CLANG_X64_MINGW64_DIR": "$(ROOTDIR)\\app\\DevSoft\\LLVM_8.0.1",
      #"CLANG_X64_MINGW64_DIR": "D:\\LLVM",
      "MINGW64_DIR": "$(ROOTDIR)\\app\\DevSoft\\MinGW-x86_64_9.2.0-msys2",
      "PYTHON27_X86_DIR": "C:\\python\\Python27",
    }
  },
  {
    "name": "mingw64",
    "type": "compiler",
    "arch": "x64",
    "version": "9.2.0",
    "variables": {},
    "env_var_keep": {},
    "env_var_merge": {},
    "env_var_replace": {},
    "language_detail": {
      "c": {
        "compile_binary": "$(MINGW64_DIR)\\bin\\gcc.exe",
        "compile_args": [
          "$(SOURCE_FILES)",
          "-o",
          "$(OUTPUT_FILE)",
          "-fno-diagnostics-color",
          "$(EXTRA_COMPILE_ARGS)"
        ],
        "default_output_file": "$(SOURCE_FILE_BASENAME_NO_EXT).exe",
        "running_binary": "$(OUTPUT_FILE)",
        "running_args": [],
        "debug_flags": [
          "-g -fopenmp"
        ],
        "release_flags": [
          "-O3 -mtune=native -fopenmp"
        ],
      },
      "cpp": {
        "compile_binary": "$(MINGW64_DIR)\\bin\\g++.exe",
        "compile_args": [
          "$(SOURCE_FILES)",
          "-o",
          "$(OUTPUT_FILE)",
          "--std=c++14",
          "-fno-diagnostics-color",
          "$(EXTRA_COMPILE_ARGS)"
        ],
        "default_output_file": "$(SOURCE_FILE_BASENAME_NO_EXT).exe",
        "running_binary": "$(OUTPUT_FILE)",
        "running_args": [],
        "debug_flags": [
          "-g -fopenmp"
        ],
        "release_flags": [
          "-O3 -mtune=native -fopenmp"
        ],
      },
    },
  },
  {
    "name": "mingw64-pe",
    "type": "compiler",
    "arch": "x64",
    "version": "9.2.0",
    "base": "mingw64",
    "language_detail": {
      "c": {
        "default_output_file": "a.exe",
        "debug_flags": [
          "-g -fopenmp"
        ],
        "release_flags": [
          "-O3 -march=native -mtune=native -fopenmp -Wl,--stack,268435456 -static -s"
        ],
      },
      "cpp": {
        "default_output_file": "a.exe",
        "debug_flags": [
          "-g -fopenmp -lbf -lgmpxx -lflint -lgmp -lmpfr -lmpir"
        ],
        "release_flags": [
          "-O3 -march=native -mtune=native -fopenmp -Wl,--stack,268435456 -static -s -lbf -lgmpxx -lflint -lgmp -lmpfr -lmpir"
        ],
      },
    },
  },
  {
    "name": "gcc-pe",
    "type": "compiler",
    "arch": "x64",
    "version": "9.2.0",
    "base": "mingw64",
    "language_detail": {
      "c": {
        "compile_binary": "gcc",
        "default_output_file": "a.out",
        "running_binary": "./a.out",
        "debug_flags": [
          "-g -fopenmp"
        ],
        "release_flags": [
          "-O3 -march=native -mtune=native -fopenmp -Wl,--stack,268435456"
        ],
      },
      "cpp": {
        "compile_binary": "g++",
        "default_output_file": "a.out",
        "running_binary": "./a.out",
        "debug_flags": [
          "-g -fopenmp -lgmpxx -lgmp"
        ],
        "release_flags": [
          "-O3 -march=native -mtune=native -fopenmp -lgmpxx -lgmp"
        ],
      },
    },
  },
  {
    "name": "clang-vc",
    "type": "compiler",
    "arch": "x64",
    "version": "8.0.1",
    "base": "vc-x64",
    "variables": {
      "CLANG_DIR": "$(CLANG_X64_MINGW64_DIR)",
    },
    "language_detail": {
      "c": {
        "compile_binary": "$(CLANG_DIR)\\bin\\clang-cl.exe",
        "compile_args": [
          "$(SOURCE_FILES)",
          "-o",
          "$(OUTPUT_FILE)",
          "/TC"
          "$(EXTRA_COMPILE_ARGS)"
        ],
        "default_output_file": "$(SOURCE_FILE_BASENAME_NO_EXT).exe",
        "running_binary": "$(OUTPUT_FILE)",
        "running_args": [],
        "debug_flags": [
          "/Od /EHsc /openmp /Zi"
        ],
        "release_flags": [
          "/Ox /EHsc /openmp"
        ],
      },
      "cpp": {
        "compile_binary": "$(CLANG_DIR)\\bin\\clang-cl.exe",
        "compile_args": [
          "$(SOURCE_FILES)",
          "-o",
          "$(OUTPUT_FILE)",
          "/TP",
          "$(EXTRA_COMPILE_ARGS)",
        ],
        "default_output_file": "$(SOURCE_FILE_BASENAME_NO_EXT).exe",
        "running_binary": "$(OUTPUT_FILE)",
        "running_args": [],
        "debug_flags": [
          "/Od /EHsc /Zi"
        ],
        "release_flags": [
          "/Ox /EHsc"
        ],
      },
    },
  },
  {
    "name": "clang-mingw64",
    "type": "compiler",
    "arch": "x64",
    "version": "8.0.1",
    "base": "mingw64",
    "variables": {},
    "env_var_keep": {},
    "env_var_merge": {
      "PATH": "$(MINGW64_DIR)\\bin;", # Clang uses this path to find mingw
    },
    "env_var_replace": {},
    "language_detail": {
      "c": {
        "compile_binary": "$(CLANG_X64_MINGW64_DIR)\\bin\\clang.exe",
        "compile_args": [
          "$(SOURCE_FILES)",
          "-o",
          "$(OUTPUT_FILE)",
          "-target x86_64-pc-windows-gnu",
          "$(EXTRA_COMPILE_ARGS)"
        ],
        "default_output_file": "$(SOURCE_FILE_BASENAME_NO_EXT).exe",
        "running_binary": "$(OUTPUT_FILE)",
        "running_args": [],
        "debug_flags": [
          "-g",
        ],
        "release_flags": [
          "-O3 -mtune=native",
        ],
      },
      "cpp": {
        "compile_binary": "$(CLANG_X64_MINGW64_DIR)\\bin\\clang++.exe",
        "compile_args": [
          "$(SOURCE_FILES)",
          "-x c++",
          "-o",
          "$(OUTPUT_FILE)",
          "--std=c++14",
          "-target x86_64-pc-windows-gnu",
          "$(EXTRA_COMPILE_ARGS)"
        ],
        "default_output_file": "$(SOURCE_FILE_BASENAME_NO_EXT).exe",
        "running_binary": "$(OUTPUT_FILE)",
        "running_args": [],
        "debug_flags": [
          "-g",
        ],
        "release_flags": [
          "-O3 -mtune=native"
        ],
      },
    },
  },
  {
    "name": "clang-pe",
    "type": "compiler",
    "arch": "x64",
    "version": "8.0.1",
    "base": "clang-mingw64",
    "language_detail": {
      "c": {
        "compile_args": [
          "$(SOURCE_FILES)",
          "-o",
          "$(OUTPUT_FILE)",
          "$(EXTRA_COMPILE_ARGS)"
        ],
        "default_output_file": "a.exe",
        "debug_flags": [
          "-g",
        ],
        "release_flags": [
          "-O3 -march=native -mtune=native -Wl,--stack,268435456",
        ],
      },
      "cpp": {
        "compile_args": [
          "$(SOURCE_FILES)",
          "-x c++",
          "-o",
          "$(OUTPUT_FILE)",
          "--std=c++14",
          "-target x86_64-pc-windows-gnu",
          "$(EXTRA_COMPILE_ARGS)"
        ],
        "default_output_file": "a.exe",
        "debug_flags": [
          "-g -lbf -lgmpxx -lflint -lgmp -lmpfr -lmpir",
        ],
        "release_flags": [
          "-O3 -march=native -mtune=native -Wl,--stack,268435456 -lbf -lgmpxx -lflint -lgmp -lmpfr -lmpir"
        ],
      },
    },
  },
  {
    "name": "tdm",
    "type": "compiler",
    "arch": "x64",
    "version": "5.1.0",
    "variables": {
      "TDM_X64_DIR": "$(ROOTDIR)\\app\\DevSoft\\TDM-GCC-64_5.1.0.2",
    },
    "env_var_keep": {},
    "env_var_merge": {},
    "env_var_replace": {},
    "language_detail": {
      "c": {
        "compile_binary": "$(TDM_X64_DIR)\\bin\\gcc.exe",
        "compile_args": [
          "$(SOURCE_FILES)",
          "-o",
          "$(OUTPUT_FILE)",
          "$(EXTRA_COMPILE_ARGS)"
        ],
        "default_output_file": "$(SOURCE_FILE_BASENAME_NO_EXT).exe",
        "running_binary": "$(OUTPUT_FILE)",
        "running_args": [],
        "debug_flags": [
          "-g -fopenmp"
        ],
        "release_flags": [
          "-O3 -march=native -fopenmp"
        ],
      },
      "cpp": {
        "compile_binary": "$(TDM_X64_DIR)\\bin\\g++.exe",
        "compile_args": [
          "$(SOURCE_FILES)",
          "-o",
          "$(OUTPUT_FILE)",
          "--std=c++11",
          "$(EXTRA_COMPILE_ARGS)"
        ],
        "default_output_file": "$(SOURCE_FILE_BASENAME_NO_EXT).exe",
        "running_binary": "$(OUTPUT_FILE)",
        "running_args": [],
        "debug_flags": [
          "-g -fopenmp"
        ],
        "release_flags": [
          "-O3 -march=native -fopenmp"
        ],
      },
    },
  },
  {
    "name": "dcj",
    "type": "compiler",
    "arch": "x86",
    "version": "2015.06.11",
    "variables": {
      "DCJ_DIR": "$(DEV_SOFT_PATH)\\dcj",
      "PYTHON_BINARY": "$(PYTHON27_X86_DIR)\\python.exe",
    },
    "env_var_keep": {},
    "env_var_merge": {},
    "env_var_replace": {},
    "language_detail": {
      "cpp": {
        "compile_binary": "$(PYTHON_BINARY)",
        "compile_args": [
          "\"$(DCJ_DIR)\\dcj.py\"",
          "build",
          "--source",
          "$(SOURCE_FILES)",
          "--language",
          "C++"
        ],
        "default_output_file": "$(SOURCE_FILE_BASENAME_NO_EXT).exe",
        "running_binary": "$(PYTHON_BINARY)",
        "running_args": [
          "\"$(DCJ_DIR)\\dcj.py\"",
          "run",
          "--executable",
          "\"$(OUTPUT_FILE)\"",
          "--nodes",
          "4"
        ],
        "debug_flags": [],
        "release_flags": [],
      },
    },
  },
  {
    "name": "python",
    "type": "interpreter",
    "arch": "x86",
    "version": "2.7.16",
    "variables": {},
    "env_var_keep": {},
    "env_var_merge": {},
    "env_var_replace": {},
    "language_detail": {
      "python": {
        "running_binary": "$(PYTHON27_X86_DIR)\\python.exe",
        "running_args": [
          "$(SOURCE_FILE_PATH)"
        ],
      },
    },
  },
  {
    "name": "go",
    "type": "compiler",
    "arch": "x86",
    "version": "1.4",
    "variables": {
      "GO_DIR": "$(DEV_SOFT_PATH)\\go_1.4_beta1",
    },
    "env_var_keep": {},
    "env_var_merge": {},
    "env_var_replace": {
      "GOROOT": "$(DEV_SOFT_PATH)\\go_1.4_beta1",
    },
    "language_detail": {
      "go": {
        "compile_binary": "$(GO_DIR)\\bin\\go.exe",
        "compile_args": [
          "build",
          "-o",
          "$(OUTPUT_FILE)",
          "$(SOURCE_FILES)"
        ],
        "default_output_file": "$(SOURCE_FILE_BASENAME_NO_EXT).exe",
        "running_binary": "$(OUTPUT_FILE)",
        "running_args": [],
      },
    },
  },
  {
    "name": "java",
    "type": "compiler",
    "arch": "x64",
    "version": "1.8.0.112",
    "variables": {
      "JAVA_DIR": "C:\\Program Files\\Java\\jdk1.8.0_112",
    },
    "env_var_keep": {},
    "env_var_merge": {},
    "env_var_replace": {},
    "language_detail": {
      "java": {
        "compile_binary": "$(JAVA_DIR)\\bin\\javac.exe",
        "compile_args": [
          "$(SOURCE_FILES)"
        ],
        "default_output_file": "$(SOURCE_FILE_PATH_NO_EXT).class",
        "running_binary": "$(JAVA_DIR)\\bin\\java.exe",
        "running_args": [
          "-cp",
          "$(SOURCE_FILE_DIRNAME)",
          "$(SOURCE_FILE_BASENAME_NO_EXT)"
        ],
      },
    },
  },
  {
    "name": "scala",
    "type": "interpreter",
    "arch": "x86",
    "version": "2.11.4",
    "variables": {
      "SCALA_DIR": "$(DEV_SOFT_PATH)\\scala",
    },
    "env_var_keep": {},
    "env_var_merge": {},
    "env_var_replace": {},
    "language_detail": {
      "scala": {
        "running_binary": "$(SCALA_DIR)\\bin\\scala.bat",
        "running_args": [
          "$(SOURCE_FILE_PATH)"
        ],
      },
    },
  },
  {
    "name": "ghc",
    "type": "compiler",
    "arch": "x86",
    "version": "2014.2.0.0",
    "variables": {
      "GHC_DIR": "$(DEV_SOFT_PATH)\\Haskell Platform\\2014.2.0.0",
    },
    "env_var_keep": {},
    "env_var_merge": {
      "path": "$(DGHC_DIR)\\bin"
    },
    "env_var_replace": {},
    "language_detail": {
      "haskell": {
        "compile_binary": "$(GHC_DIR)\\bin\\ghc.exe",
        "compile_args": [
          "$(SOURCE_FILES)",
          "/-o",
          "$(OUTPUT_FILE)",
          "$(EXTRA_COMPILE_ARGS)"
        ],
        "default_output_file": "$(SOURCE_FILE_BASENAME_NO_EXT).exe",
        "running_binary": "$(OUTPUT_FILE)",
        "running_args": [],
      },
    },
  },
  {
    "name": "vc-toolchain-base",
    "variables": {
      "VC_DIR": "$(DEV_SOFT_PATH)\\win_toolchain_2013e\\vs2013_files\\VC",
      "SDK_DIR": "$(DEV_SOFT_PATH)\\win_toolchain_2013e\\vs2013_files\\win8sdk",
      "RUN_TIME_DIR": "$(DEV_SOFT_PATH)\\win_toolchain_2013e\\vs2013_files\\sys32",
    },
    "env_var_keep": {},
    "env_var_merge": {},
    "env_var_replace": {},
    "language_detail": {
      "c": {
        "compile_binary": "cl.exe",
        "compile_args": [
          "$(SOURCE_FILES)",
          "/Fe$(OUTPUT_FILE)",
          "/TC",
          "/Fo\"$(SOURCE_FILE_PATH_NO_EXT).obj\"",
          "$(EXTRA_COMPILE_ARGS)"
        ],
        "default_output_file": "a.exe",
        "running_binary": "$(OUTPUT_FILE)",
        "running_args": [],
      },
      "cpp": {
        "compile_binary": "cl.exe",
        "compile_args": [
          "$(SOURCE_FILES)",
          "/Fe\"$(OUTPUT_FILE)\"",
          "/TP",
          "/Fo\"$(SOURCE_FILE_PATH_NO_EXT).obj\"",
          "$(EXTRA_COMPILE_ARGS)"
        ],
        "default_output_file": "a.exe",
        "running_binary": "$(OUTPUT_FILE)",
        "running_args": [],
      },
    },
  },
  {
    "name": "vc-toolchain",
    "type": "compiler",
    "arch": "x86",
    "version": "12.0",
    "base": "vc-toolchain-base",
    "variables": {
      "RUN_TIME_DIR": "$(DEV_SOFT_PATH)\\win_toolchain_2013e\\vs2013_files\\sys32",
    },
    "env_var_keep": {},
    "env_var_merge": {
      "PATH": "$(VC_DIR)\\BIN;$(VC_DIR)\\VCPackages;$(RUN_TIME_DIR);",
      "LIB": "$(VC_DIR)\\LIB;$(SDK_DIR)\\Lib\\win8\\um\\x86;",
      "LIBPATH": "$(VC_DIR)\\LIB;",
      "INCLUDE": "$(VC_DIR)\\INCLUDE;$(SDK_DIR)\\Include\\shared;$(SDK_DIR)\\Include\\um;$(CPLUS_INCLUDE_PATH);"
    },
    "env_var_replace": {},
    "language_detail": {
      "c": {
        "debug_flags": [
          "/Od /EHsc /openmp /Zi"
        ],
        "release_flags": [
          "/Ox /arch:SSE2 /EHsc /openmp"
        ],
      },
      "cpp": {
        "debug_flags": [
          "/Od /EHsc /openmp /Zi"
        ],
        "release_flags": [
          "/Ox /arch:SSE2 /EHsc /openmp"
        ],
      },
    },
  },
  {
    "name": "vc-toolchain",
    "type": "compiler",
    "arch": "x64",
    "version": "12.0",
    "base": "vc-toolchain-base",
    "variables": {
      "RUN_TIME_DIR": "$(DEV_SOFT_PATH)\\win_toolchain_2013e\\vs2013_files\\sys64",
    },
    "env_var_keep": {},
    "env_var_merge": {
      "PATH": "$(VC_DIR)\\BIN\\x86_amd64;$(VC_DIR)\\BIN;$(VC_DIR)\\VCPackages;$(RUN_TIME_DIR);",
      "LIB": "$(VC_DIR)\\LIB\\amd64;$(SDK_DIR)\\Lib\\win8\\um\\x64;",
      "LIBPATH": "$(VC_DIR)\\LIB\\amd64;",
      "INCLUDE": "$(VC_DIR)\\INCLUDE;$(SDK_DIR)\\Include\\shared;$(SDK_DIR)\\Include\\um;$(CPLUS_INCLUDE_PATH);"
    },
    "env_var_replace": {},
    "language_detail": {
      "c": {
        "debug_flags": [
          "/Od /EHsc /openmp /Zi"
        ],
        "release_flags": [
          "/Ox /EHsc /openmp"
        ],
      },
      "cpp": {
        "debug_flags": [
          "/Od /EHsc /openmp /Zi"
        ],
        "release_flags": [
          "/Ox /EHsc /openmp"
        ],
      },
    },
  },
  {
    "name": "vc-base",
    "variables": {
      "VC_DIR": "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC",
      "VC_VERSION": "14.22.27905",
      "SDK_DIR": "C:\\Program Files (x86)\\Windows Kits\\10",
      "SDK_VERSION": "10.0.18362.0",
    },
    "env_var_keep": {},
    "env_var_merge": {
      "PATH": "$(VC_DIR)\\Tools\\MSVC\\$(VC_VERSION)\\bin\\Host$(HOST)\\$(TARGET);$(VC_DIR)\\Tools\\MSVC\\$(VC_VERSION)\\bin\\Host$(HOST)\\$(OTHER_TARGET);",
      "INCLUDE": "$(CPLUS_INCLUDE_PATH);$(VC_DIR)\\Tools\\MSVC\\$(VC_VERSION)\\Include;$(SDK_DIR)\\Include\\$(SDK_VERSION)\\ucrt;$(SDK_DIR)\\Include\\$(SDK_VERSION)\\um;$(SDK_DIR)\\Include\\$(SDK_VERSION)\\shared;",
      "LIB": "$(LIBRARY_PATH);$(VC_DIR)\\Tools\\MSVC\\$(VC_VERSION)\\lib\\$(TARGET);$(SDK_DIR)\\lib\\$(SDK_VERSION)\\ucrt\\$(TARGET);$(SDK_DIR)\\lib\\$(SDK_VERSION)\\um\\$(TARGET);",
    },
    "env_var_replace": {},
    "language_detail": {
      "c": {
        "compile_binary": "cl.exe",
        "compile_args": [
          "$(SOURCE_FILES)",
          "/Fe$(OUTPUT_FILE)",
          "/TC",
          "/Fo\"$(SOURCE_FILE_PATH_NO_EXT).obj\"",
          "$(EXTRA_COMPILE_ARGS)"
        ],
        "default_output_file": "a.exe",
        "running_binary": "$(OUTPUT_FILE)",
        "running_args": [],
        "debug_flags": [
          "/Od /EHsc /openmp /Zi"
        ],
        "release_flags": [
          "/Ox /EHsc /openmp"
        ],
      },
      "cpp": {
        "compile_binary": "cl.exe",
        "compile_args": [
          "$(SOURCE_FILES)",
          "/Fe\"$(OUTPUT_FILE)\"",
          "/TP",
          "/Fo\"$(SOURCE_FILE_PATH_NO_EXT).obj\"",
          "$(EXTRA_COMPILE_ARGS)"
        ],
        "default_output_file": "a.exe",
        "running_binary": "$(OUTPUT_FILE)",
        "running_args": [],
        "debug_flags": [
          "/Od /EHsc /openmp /Zi"
        ],
        "release_flags": [
          "/Ox /EHsc /openmp"
        ],
      },
    },
  },
  {
    "name": "vc",
    "internal_name": "vc-x86",
    "type": "compiler",
    "arch": "x86",
    "version": "14.0",
    "base": "vc-base",
    "variables": {
      "HOST": "x86",
      "TARGET": "x86",
      "OTHER_TARGET": "x64", # {OTHER_TARGET} = {"x86", "x64"} - {TARGET}
    },
  },
  {
    "name": "vc",
    "internal_name": "vc-x64",
    "type": "compiler",
    "arch": "x64",
    "version": "14.0",
    "base": "vc-base",
    "variables": {
      "HOST": "x64",
      "TARGET": "x64",
      "OTHER_TARGET": "x86", # {OTHER_TARGET} = {"x86", "x64"} - {TARGET}
    },
  },
]
